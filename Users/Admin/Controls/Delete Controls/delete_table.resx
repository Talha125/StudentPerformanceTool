<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="delete.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGgAAABoCAYAAAAdHLWhAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAS9SURBVHhe7ZrLalRBEIajggTBEGUQEqOCuEjyCGIQF+4ERx/A
        y0YxRkkWvoNbNyIufAEv6Eb0CXTlTrxgoq5ERNEoeEl0/FtH0CCn61R3n6rKqYEiIVPV9f9fdXfOaAYG
        lL96vd5mxFHETcQ7ROorrHELcQSxSbl9vfIAbwhxAfEtdSIV9V/7PYb1klCoDNB2I54XHMzKpV/hB/sU
        otAnCaBmEEsNDudPq2V8c0YfEUWKAOiYwGBWtjyuCIkeKaC0t/DvG+rsw++8KT1kFCgBkEHECyrBBvLm
        0WO9AjQ6JADGuQag120xp4OOsApQ24B4TaR3H3kn+k95O/G1ToQnw5OIe8Re4cluUBiPfHtA6BKAhae6
        U4g1qYrDGohpBOVJ8UBqP/P1AHWFMKDZ3EaJ1+rl3H3NrQdQLyMDeoD31+Y2hjXXIR5Gei/k7mtqvT6k
        8AGx6lXswyOazkZ6h0fu7JvDzJBgfgvhettTyhB6TxH6d0r1V78u4IwTAE2WMoLek4T+46X6q18XcCYI
        gCZKGZHuX8rXAIxtR1xDvCEAbntKYHQDsavYQP5eGI22Id62nTrDf2A2VnxIaHKdIc5LfhO42sSAFp02
        m8D7JgbEVueFvZ4PSPku8AH5gJQTUC4v+wlS7te8vOSBmSeg3IAPyAeknIByeX6CfEDKCSiX5yfIB6Sc
        gHJ5yScotkDMf6y+7vvoF/7YYyuizt/EhdxQk/3vC5r2X5dX+M+7ylftBY0VqPevXmDhgav3r16gD8iv
        uCoChfdHfHk/Qco3qA/IBxQ/xoIZ6jdoqsC21xffW20HnOrfBxQhkAo4td4H5ANKe4pJ3YHW6/0E+Qny
        E7Sq/yXB+hWVqt+vOL/i/IrzK67iFKReMdL1fsX5FedXnF9xfsXxb0LpO9x6fz55YqV1QNL6iZj5adIG
        rffnkydWWgckrZ+ImZ8mbdB6fz55YqV1QNL6iZj5adIGrffnkydWWgckrZ+ImZ8mbdB6fz55YqV1QNL6
        iZj5adIGrffnkydWWgckrZ+ImZ8mbdB6fz55YqV1QNL6iZj5adIGrffnkydWWgckrZ+ImZ8mbdB6fz55
        YqV1QNL6iZj5adIGrffnkydWWgckrZ+ImZ8mbdB6fz55YqV1QNL6iZj5adIGrffnkydWWgckrZ+ImZ8m
        bdB6fz55YqV1QNL6iZj5adIGrffnkydWWgckrZ+ImZ8mbdB6fz55YqV1QNL6iZj5adIGrffnkydWWgck
        rZ+ImZ8mbdB6fz55YqV1QNL6iZj5aakG+Z11VKr3r15g4Tmq969eoA+oekSF+Ygvr36DQuCniMiN4hQL
        CYDvoYj3xUKt6ctC4NOIyIP01WxlwvehiPfH4o4g8E5E5CO8PywuNLOA4ImwOW9nblt/OYg8G7uH8f4T
        RBdh/rrrX2uH8fUZwffp+kQzV0DkDsQyQWzbUgKTscy4ectByKW20Sf4vcijWaAKYkcRHwii25ISWIwW
        QM1fEoL2+1X3a/8tBRZ8kgUrIWwO8aMtx+Q/Pr/jZzMFEacvDYHhs8HHFg4peO6mE2xgBQjtIM4jPrdg
        UMFj8NppAG3eFhA9gphG3EXMI76sgoEFDwt9T8HbSF5q/672E0jLCmspUDClAAAAAElFTkSuQmCC
</value>
  </data>
</root>